다음과 같이 레코드가 구성되어 있을 때, 이진 검색 방법으로 14를 찾을 경우 비교되는 횟수는?
[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15] (No.22 -> 2)

1. 2
2. 3
3. 4
4. 5

= 1. 배열의 중간 값을 찾음
= 2. 중간 값과 검색 값을 비교
  -> 1. 중간 값이 검색 값과 같으면 끝
  -> 2. 중간 값보다 검색 값이 크다면 오른쪽 구간을 탐색
  -> 3. 중간 값보다 검색 값이 작다면 왼쪽 구간을 탐색

= 3. 값을 찾거나 간격이 비었을 때까지 반복
= 4. 이진 검색 (Binary Search) -> low, middle, high 값을 사용
= 5. 찾고자 하는 데이터를 중앙에 위치한 중간 값과 비교하는 방법
= 6. 데이터 목록은 반드시 사전에 오름차순으로 정렬되어 있어야 한다

= 7. 목록: [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15], 찾는 값: 14
  -> 1.
    low: 0
    high: 14
    middle: (0 + 14 / 2) -> 7
    arr[middle]: arr[7] -> 8
    8 < 14: low 변경

  -> 2. 
    low: 0
    high: 14
    middle: (8 + 14) / 2 -> 11
    arr[middle]: arr[11] -> 12
    12 < 14: low 변경

  -> 3. 
    low: middle + 1 -> 12
    high: 14
    middle: (12 + 14) / 2 -> 13
    arr[middle]: arr[13] -> 14
    14 == 14

SW 공학에서 Walkthrough 에 대한 설명으로 틀린 것 (No.23 -> 3)
1. 사용사례를 확장하여 명세하거나 설계 Diagram, 원시 코드, TC 등 적용 가능
2. 복잡한 알고리즘, 반복, 실시간 동작, 병행 처리와 같은 기능, 동작을 이해하려고 할 때 유용
3. 인스펙션 (Inspection) 과 동일한 의미를 가짐
4. 단순한 TC 를 이용하여 Product 를 수작업으로 수행해보는 것

= 1. 워크스루: 요구사항 명세서 작성자를 포함하여 사전 검토한 후에 짧은 검토 회의를 통해 결함을 발견
= 2. 인스펙션: 요구사항 명세서 작성자를 제외, 다른 검토 전문가, 요구사항 명세서를 확인하면서 결함을 발견

동시에 소스 수정 방지, 다른 방향으로 진행된 개발 결과 합병, 변경 내용 추척 가능한 SW 버전관리 도구 (No.29 -> 1)
1. RCS (Revision Control System)
2. RTS (Reliable Transfer Service)
3. RPC (Remote Procedure Call)
4. RVS (Relative Version System)

= 1. RCS (Revision Control System)
  -> 1. CVS 와의 차이점은 Source File 의 수정을 한 사람만으로 제한
  -> 2. 다수 사용자가 동시 파일 수정 할 수 없도록 파일 잠금 방식으로 버전 관리하는 도구
  -> 3. 다른 방향으로 진행된 개발 결과를 합치거나 변경 내용 추적 가능

= 2. RPC (Remote Procedure Call) 
  -> 별도 원격 제어 위한 코딩 없이 다른 주소 공간에서 Remote 함수, Procedure 실행 가능, Process 간 통신

화이트박스 Test 와 관련한 설명으로 틀린 것 (No.30 -> 3)
1. 화이트박스 Test 의 이해를 위해 논리흐름도 (Logic-Flow Diagram) 이용 가능
2. Test Data 를 이용해 실제 프로그램 실행, 오류 찾는 동적 Test (Dynamic Test) 에 해당
3. 프로그램 구조 고려 X, TC 는 Program 또는 Module 의 요구나 명세를 기초로 결정
4. TC 를 선택하기 위하여 검증 기준 (Test Coverage) 을 정함

= 프로그램 구조를 고려하지 않는 것 -> 블랙박스 Test

버블 정렬을 이용하여 다음 자료를 오름차순으로 정렬할 경우, PASS 1 의 결과 (No.32 -> 4)
[9, 6, 7, 3, 5]

1. 6, 9, 7, 3, 5
2. 3, 9, 6, 7, 5
3. 3, 6, 7, 9, 6
4. 6, 7, 3, 5, 9

= 1. 버블 정렬은 첫 위치부터 시작해서 오른쪽 값과 비교
= 2. PASS 2 첫 버블 정렬이 끝난 상태
  -> 96 비교 - 69735 - 97 비교 - 67935 - 93 비교 - 67395 - 95 비교 - 67359

IDE (Integrated Development Environment) 도구의 각 기능에 대한 설명으로 틀린 것 (No.36 -> 2)
1. Coding - 프로그래밍 언어를 가지고 컴퓨터 프로그램을 작성할 수 있는 환경을 제공
2. Compile - 저급 언어의 프로그램을 고급 언어 프로그램으로 변환하는 기능
3. Debugging - 프로그램에서 발견되는 버그를 찾아 수정할 수 있는 기능
4. Deployment - SW 를 최종 사용자에게 전달하기 위한 기능

= 1. Compile - 주어진 언어로 작성된 Computer Program 을 다른 언어의 동등한 Program 으로 변환하는 기능
= 2. Compile 은 고급언어 (사람이 인식하는 언어) 에서 저급언어 (기계어) 로 변환하는 기능
