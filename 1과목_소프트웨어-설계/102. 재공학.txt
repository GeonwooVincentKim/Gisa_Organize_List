II. 재공학
1. 재공학
- 1. S/W Reengineering 의 개념 및 목표
  = 1. S/W 위기 개발 생산성 X, 유지보수 생산성 O
  = 2. 재구조화 -> 재공학 한 유형, 사용자 요구사항, 기술적 설계 변경 없이 프로그램 개선
  = 3. S/W 재공학, 예방 유지보수 (Preventive Maintenance)
  = 4. 재사용 수월, S/W 수명 연장

- 2. 재공학 장점
  = 1. 개발 시간 비용 & 프로젝트 실패 위험 감소
  = 2. S/W 품질 및 생산성 향상 & 구축 방법 개발 지식 공유

- 3. 재공학 과정
  = 1. 분석 (Analysis) -> S/W 명세서 확인, S/W 동작 이해, 재공학 대상 선정
  = 2. 재구성 (Restructuring) -> S/W 구조 향상, 코드 재구성
  = 3. 역공학 (Reverse Engineering) -> 원시 코드 분석, S/W 관계 파악, 기존 시스템 설계 정보 재발견, 다시 제작
  = 4. 이식 (Migration) -> 기존 S/W System 을 새로운 기술, H/W 환경에서 사용할 수 있도록 변환하는 작업

- 4. 재사용 2가지 기본 기술
  = 1. 생성 중심 (Generation Based, 모듈화) -> 재사용 단위 찾아 발전, 유용한 S/W 부품 찾아내기
  = 2. 합성 중심 (Composition Based, 모델화) -> 모듈을 생산성 있게 조립, 모듈 만들어서 끼워 맞추는 방법, S/W 완성

- 5. 리팩토링 (Refactoring) -> 쉽게 이해, 적은 비용 수정, 겉으로 보이는 동작 변화 없이 내부 구조 변경

** 3초 컷 -> 기존 S/W System 을 새로운 기술, H/W 환경에서 사용할 수 있도록 변환하는 작업 -> Migration (이식)

2. CASE (Computer Aided S/W Engineering)
- 1. CASE