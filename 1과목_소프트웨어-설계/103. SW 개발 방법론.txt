III. SW 개발 방법론
1. SW 설계 방법론
- 1. SW 생명주기 (SW Life Cycle)
  = 1. SW 제품 개념 형성, 운용 / 유지보수
  = 2. 타당성 검토 -> 개발 계획 -> 요구사항 분석 -> 설계 -> 구현 -> Test -> 운용 -> 유지보수

- 2. 폭포수 모형 (Waterfall Model) -> 선형 순차적 모델, Bohem, 고전 생명주기 모형, 순차적으로 진행
- 3. 나선형 모형 (Spiral Model) 
  = 1. Bohem, 반복적 작업 수행, 점증적 생명주기 모형
  = 2. 점증적 & 집중적, 유지보수 필요 없음
  = 3. SW 개발 중 발생 가능한 위험 관리 및 최소화, 각 개발 순서 반복 수행, 점진적 방식 -> 누락된 요구사항 추가 가능

- 4. 나선형 모형의 개발 단계
  = 1. 계획 수립 -> 기능, 제약, 세부적 계획
  = 2. 위험 분석 -> 위험 요소 분석, 해결 방안 설정
  = 3. 개발 & 검증 -> 기능 개발 & 검증
  = 4. 고객 평가 및 다음 단계 수립 -> 결과물 평가, 추후 단계 진행 여부 결정

** 3초 컷
1. 폭포수 모형 -> 고전적, 선형 순차 모델
2. 나선형 모델 절차 -> 계획 수립 - 위험 분석 - 개발 & 검증 - 고객 평가 및 다음 단계 수립
3. 나선형 모델 핵심 가치 -> 위험 분석
**

- 5. 하향식과 상향식 설계
  = 1. 하향식 설계 -> SW 설계 시, Main User Function (상위 기능) -> Element Function (하위 기능)
  = 2. 상향식 설계 -> 기본 컴포넌트 (Element Function) -> 상위 컴포넌트(Main User Function)

- 6. 프로토타입 모형
  = 1. 프로토타입 미리 만들어 최종 결과물을 예측하는 모형
  = 2. 폭포수 모형 단점 보완, 요구사항 충실하게 반영 가능

- 7. HIPO (Hierarchy Input Process Output)
  = 1. 입력, 처리, 출력, 시스템 분석 & 설계 & 시스템 문서화
  = 2. 가시적 도표 (Visual Table of Contents), 총체적 다이어그램 (Overview Diagram), 세부적 다이어그램 (Detail Diagram)
  = 3. 구조도 (가시적 도표), 개요, 도표 (Index Diagram), 상세 도표
  = 4. 기능, 자료 의존관계 동시 표현 + (보기 + 이해 + 유지보수) 쉬움

- 8. V-모델
  = 1. 폭포수 모형 + 시스템 검증 + 테스트 작업 강조
  = 2. 세부적 프로세스, 신뢰도 높은 시스템 개발에 효과적
  = 3. 개발 단계 작업 확인, 테스트 작업 수행
  = 4. 생명주기 초반, 테스트 작업 지원
  = 5. 코드 + 요구사항 + 설계 결과 테스트
  = 6. 폭포수 모형, 반복 + 재저치 과정 명확
  = 7. Test 작업, 단계별 구분, 책임 명확

** 
테스트 계획 및 설계 (정적) -> 요구사항 분석 - 기능명세 분석 - 설계 - 개발  (설계와 통합테스트 확인)
테스트 수행 (동적) -> 단위 - 통합 - 시스템 - 인수
**

** 3초 컷
1. 하향식 설계 - Main User Function -> Element Function
2. 상향식 설계 - Element Function -> Main User Function
**

2. 애자일 (Agile) 개발 방법론
- 1. 고객과의 협업 초첨 방법론, SW 개발 중 설계 변경에 신속히 대응하여 요구사항 수용 가능
- 2. 개인과 소통 중요, 고객과의 피드백 중요 + SW 잘 실행되는데 가치 두고, SW 배포 시차를 최소화 가능
- 3. 특징 ->  짧은 Release, 반복, 점증적 설계, 사용자 참여, 문서 최소화, 비공식적인 커뮤니케이션 변화
- 4. 종류
  = 1. XP (Extreme Programming), Scrum, Lean, DSDM (Dynamic System Development Method, 동적 시스템 개발 방법론)
  = 2. FDD (Feature Driven Development, 기능 중심 개발), Crystal, ASD (Adaptive SW Development, 적응형 SW 개발 방법론), DAD (Disciplined Agile Delivery, 학습 애자일 배포)

- 5. Agile 선언문 -> 개인과의 소통, 실행되는 SW, 고객과의 협업, 변경에 대한 응답

** 3초 컷
1. 소통 (알기 쉬운 차트, 정보 공유, 회의)
2. 협력 (개발팀 협조, 고객과의 대화로 문제 해결)
3. 적응 (변화 수용, 융통성 발휘)
4. 지속 (검증 반복, 점증 개발)
5. 가치 전달 (위험도 높은 직업 우선, 비용 감소)
6. 피드백 (자주 출시, 고객 평가)
**

3. XP (eXtreme Programming)
- 1. XP (eXtreme Programming)
  = 1. 1999년 Kent Beck, 요구사항이 시시각각 변동 심한 경우 사용
  = 2. 요구 맞는 양질의 SW 신속하게 제공
  = 3. 정의 해 놓고 작업 X, 요구사항이 변경되는 것을 적용하는 방식 -> 적응성
  = 4. 고객 참여, 개발 과정 반복 극대화, 생산성을 향상하는 방법

- 2. XP 핵심 가치
  = 1. 의사소통 -> 개발자, 관리자, 고객 간 원활한 소통
   = 2. 단순성 -> 부가적 기능, 미사용 구조와 알고리즘은 배제
   = 3. 피드백 -> 지속적 테스트, 통합, 반복적 결함 수정 등 빠르게 피드백
   = 4. 용기 -> 고객 요구사항 변화에 능동적으로 대응
   = 5. 존중 -> 개발 팀원 간의 상호 존중

- 3. XP Process
  = 1. User Story -> 요구사항, UML UseCase 같은 목적, 형식 X, 고객에 의해 작성
  = 2. Release Planning -> 스토리 적용, 부분적으로 기능 완료된 제품 제공, 부분/전체 개발 완료 시점 일정 수립
  = 4. Acceptance Test -> Release 단위 개발, User Story 에 작성된 요구사항 확인, 고객이 직접 Test
  = 5. Small Release -> 최종 완제품, 고객 최종 Test, 제공, 고객 반응을 기능별로 확인

** 3초 컷
1. XP 핵심 정리 -> 고객 참여와 개발 과정의 반복 극대화, 생산성 향상
2. XP 핵심 가치 -> 소통, 단순성, 피드백, 용기, 존중
3. XP 핵심 가치는 모두 고객과의 소통과 관련되어 있음
**

- 4. XP 의 12가지 실천 항목 (Practice) & 3초 컷
  = 1. Pair Programming -> 하나의 작업을 2명의 개발자가 공동 수행
  = 2. Planning Game -> 게임처럼 목표를 두고 기획 수행
  = 3. Test Driver Development -> Unit Test (단위 테스트) 후, 실제 코드 작성
  = 4. Whole Team -> 고객을 Project 팀원으로 상주
  = 5. Continuous Integration -> 상시 Build 및 배포 가능한 상태로 유지
  = 6. Design Improvement -> 불필요한 기능 제거 및 Refactoring
  = 7. Small Releases -> 필요한 기능들만 갖춘 간단한 System 을 빠르게 배포
  = 8. Coding Standards -> 표준화된 코드 작성
  = 9. Collective Ownership -> 소스 코드는 모든 개발자가 언제라도 수정 가능
  = 10. Simple Design -> 가장 간결한 디자인 상태 유지
  = 11. System Metaphor -> 최종 개발되어야 할 시스템 구조를 조망
  = 12. Sustainable Pace -> 오버타임 지양

- 5. 효과적인 프로젝트 관리를 위한 3대 요소
  = 1. 사람 (People) - 인적 자원
  = 2. 문제 (Problem) - 문제 인식
  = 3. 프로세스 (Process) - 작업 계획

- 6. 정형 기술 검토 지침사항
  = 1. 의제와 그 범위 유지 & 참가자 수 제한
  = 2. 각 Check List 작성, 자원 및 시간 일정 할당 & 개발자가 아닌 제품 검토에 집중
  = 3. 논쟁과 반박 제한 & 검토 과정과 결과 재검토
